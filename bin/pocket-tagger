#!/usr/bin/env node

"use strict";

function main(args) {
  process.on("warning", (e) => console.warn(e.stack));
  const fs = require("fs");
  const path = require("path");
  const program = require("commander");
  const PocketTagger = require("pocket-tagger");

  const packageDetails = require(path.join(__dirname, "..", "package.json"));

  const homeFolder =
    process.env[process.platform == "win32" ? "USERPROFILE" : "HOME"];
  const pocketDirectory = path.resolve(homeFolder, ".pocket");
  const defaultTaggerConfigPath = path.resolve(pocketDirectory, "tagger.json");
  program
    .version(packageDetails.version)
    .option("-g, --generate <path>", "Create an example configuration")
    .option(
      "-c, --config [path]",
      "Tag config file to use",
      defaultTaggerConfigPath
    )
    .option(
      "-p, --profile [name]",
      "Profile from ~/.pocket/credentials to use",
      "default"
    )
    .parse(args);

  const opts = program.opts();

  if (opts.generate) {
    const example = fs.readFileSync(
      path.join(__dirname, "..", "example", "tagger.json")
    );
    fs.writeFileSync(opts.generate, example);
    process.exit(0);
  }

  let config;
  try {
    config = JSON.parse(fs.readFileSync(opts.config));
  } catch (e) {
    throw new Error(opts.config + " must exist and be a valid JSON definition");
  }

  if (!config.regexes) {
    throw new Error("Your config must contain a 'regexes' section");
  }

  if (!config.tags) {
    throw new Error("Your config must contain a 'tags' section");
  }

  return PocketTagger(opts.profile, config.regexes, config.tags, config.cache)
    .then(function (tagger) {
      tagger.run().then(function (aa) {
        console.log("All urls processed");
      });
    })
    .catch(function (e) {
      console.log(e);
    });
}

if (require.main === module) {
  main(process.argv);
}

module.exports = main;
